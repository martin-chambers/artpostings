@model ArtPostings.Models.PictureFileRecordsViewModel
<script type="text/javascript">
    function dropdownchange(event, statusvalue) {
        event.preventDefault();
        $.ajax({
            url: '@Url.Action("Index")', // controller-agnostic: this might call either the Archive or Home versions of 'Reload'
            data: { status: statusvalue, initial: false},
            type: 'GET',
            success: function (htmlstring) {
                // need to replace content at a fairly high level to ensure old postings are cleared out of the view
                $('#filelistcontainer').html(htmlstring);
                $('#filelistcontainer').show();
            },
            error: function (request, status, error) {
                var err_resp = (error == undefined || error == '') ? 'The server is not responding' : error;
                alert(err_resp);
            }
        });
    }

    function filedelete(event, file, status) {
        event.preventDefault();
        $.ajax({
            url: '@Url.Action("FileDelete")', // controller-agnostic: this might call either the Archive or Home versions of 'Reload'
            data: { FileName: file, Status: status},
            type: 'POST',
            success: function (htmlstring) {
                // need to replace content at a fairly high level to ensure old postings are cleared out of the view
                $('#filelistcontainer').html(htmlstring);
                $('#filelistcontainer').show();
            },
            error: function (request, status, error) {
                alert(error);
            }
        });

    }

    function startdrag(event, filepath) {
        event.dataTransfer.effectAllowed = "move";
        event.dataTransfer.setData("text", filepath);
    }

    function drop_here(obj) {
        debugger;
        obj.event.preventDefault();
        var filepath = event.dataTransfer.getData("text");
         return $.ajax({
            url: '@Url.Action("MovePicture")', // controller-agnostic: this might call either the Archive or Home versions of 'Reload'
            data: { filepath: filepath, archive: obj.archive },
            type: 'POST',
            success: function (responsedata) {
                debugger;
                alert(responsedata.Message)
            },
            error: function (request, status, error) {
                var err_resp = (error == undefined || error == '') ? 'The server is not responding' : error;
                alert(err_resp);
            }
         });

        // in here, we'll call ..\archive\movepicture or ..\home\movepicture
    }

    function allow_drop_here(event) {
        event.preventDefault();
    }
</script>


<div id="status">
    @Html.DropDownList("StatusDropDown", Model.Statuses, new { onchange = "dropdownchange(event, this.value)", id ="selectstatus" })
</div><br /><br /><br />
<div id="filelistcontainer">
    @{
        Html.RenderPartial("_PictureList");
    }
</div>
<div class="pageheader">
    Upload a new picture file ...
    <hr />
</div>
@using (@Html.BeginForm("UploadFile", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "uploadForm" }))
{
    <input class="upload" type="file" name="FileUpload" />
    <input type="submit" name="Submit" value="Upload" />    
}
<br /><br />
